{"version":3,"sources":["assets/imgs/doctor.svg","Componentes/CardProfissional.js","Services/Api/BaseApi.js","Services/Api/Especialidades.js","Services/Api/Profissionais.js","Routes/Home.js","Services/Api/Origens.js","Services/Api/Agendamento.js","Routes/Cadastro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CardProfissional","profissional","this","props","react_default","a","createElement","className","style","marginBottom","especialidadeSelecionada","label","minHeight","src","foto","doctor","alt","nome","conselho","concat","documento_conselho","uf_conselho","toUpperCase","agendar","href","value","profissional_id","Component","BaseApi","path","fetch","urlfeegow","then","response","ok","Error","statusText","json","success","content","data","body","JSON","stringify","method","Especialidades","get","especialidade","getEspecialidades","find","especialidade_id","Profissionais","getProfissionais","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeEspecialidades","bind","assertThisInitialized","state","especialidades","profissionais","loading","_this2","map","setState","catch","error","App","ToastsStore","warning","arg","_this3","_this4","htmlFor","react_select_esm","options","onChange","placeholder","onClick","listarProfissionais","type","hidden","role","key","Componentes_CardProfissional","Origens","Agendamento","postObject","Cadastro","forms","React","createRef","cpf","comoconheceu","datanascimento","changeOrigens","handleSubmit","parametros","match","params","getEspecialidade","Number","getProfissional","_ref","asyncToGenerator","regenerator_default","mark","_callee","professional","wrap","_context","prev","next","stop","_x","apply","arguments","getOrigens","_ref2","_callee2","origens","_context2","origem","nome_origem","origem_id","_x2","origemSelecionada","event","preventDefault","formData","specialty_id","professional_id","name","current","source_id","CPF","validate","valid","onSubmit","ref","required","lib","position","ToastsContainerPosition","BOTTOM_CENTER","store","BrowserRouter","Route","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c50cafa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doctor.b655ae6c.svg\";","import React, {Component} from 'react';\nimport doctor from './../assets/imgs/doctor.svg';\n\nclass CardProfissional extends Component {\n    render() {\n        let profissional = this.props.profissional;\n        return (\n            <div className=\"card\" style={{marginBottom: \"5px\"}}>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-5 text-center\">\n                            <h6 className=\"card-title\">{this.props.especialidadeSelecionada.label}</h6>\n                            <div style={{minHeight: \"130px\"}}>\n                                <img src={profissional.foto ? profissional.foto : doctor}\n                                     className=\"rounded-circle m-t-xs img-fluid\" alt=\"Cinque Terre\"/>\n                            </div>\n                        </div>\n                        <div className=\"col-7 text-center\">\n                            <h5 className=\"card-subtitle mb-2 text-muted\">{profissional.nome}</h5>\n                            <div className=\"card-text\" style={{minHeight: \"72px\"}}>\n                                <address>\n                                    {profissional.conselho ? `Conselho: ${profissional.conselho}` : ''}<br/>\n                                    {profissional.documento_conselho ? `Documento: ${profissional.documento_conselho}` : ''}<br/>\n                                    {profissional.uf_conselho ? `Estado do Conselho: ${profissional.uf_conselho.toUpperCase()}` : ''}\n                                </address>\n                            </div>\n                            {\n                                this.props.agendar &&\n                                <div>\n                                    <a href={`/cadastro/${this.props.especialidadeSelecionada.value}/${this.props.profissional.profissional_id}`}\n                                       className=\"btn btn-success btn-sm\">Agendar</a>\n                                </div>\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CardProfissional;","class BaseApi {\n\n    static urlfeegow = 'http://localhost:8001';\n\n    static get(path){\n        return fetch(`${this.urlfeegow}${path}`).then(function (response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).then(function (response) {\n            if (response.success !== true) {\n                throw Error(\"Erro ao consultar a api\");\n            };\n            return response.content;\n        });\n    }\n\n    static postObject(path,data){\n\n        return fetch(`${this.urlfeegow}${path}`,{\n            body: JSON.stringify(data),\n            method: 'POST'\n        })\n            .then(function (response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).then(function (response) {\n            if (response.success !== true) {\n                throw Error(\"Erro ao consultar a api\");\n            };\n            return response.content;\n        });\n    }\n}\n\nexport default BaseApi;","import BaseApi from \"./BaseApi\";\n\nclass Especialidades extends BaseApi{\n\n    static getEspecialidades() {\n        return this.get('/api/especialidades');\n    }\n\n    static getEspecialidade(especialidade){\n        return this.getEspecialidades().then((response) => {\n            return response.find((a) => a.especialidade_id === especialidade);\n        });\n    }\n\n}\n\nexport default Especialidades;","import BaseApi from \"./BaseApi\";\n\nclass Profissionais extends BaseApi {\n    static getProfissionais(especialidade) {\n        return this.get('/api/profissionais?especialidade_id=' + especialidade);\n    }\n\n    static getProfissional(especialidade, profissional) {\n        return this.getProfissionais(especialidade).then((response) => {\n            return response.find((a) => a.profissional_id === profissional);\n        });\n    }\n}\n\nexport default Profissionais;","import React, {Component} from 'react';\nimport Select from 'react-select';\nimport CardProfissional from \"../Componentes/CardProfissional\";\nimport Especialidades from \"../Services/Api/Especialidades\";\nimport Profissionais from \"../Services/Api/Profissionais\";\nimport App from \"../App\";\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.changeEspecialidades = this.changeEspecialidades.bind(this);\n        this.state = {\n            especialidades: [],\n            especialidadeSelecionada: null,\n            profissionais: [],\n            loading: false\n        }\n    }\n\n    componentDidMount() {\n        Especialidades.getEspecialidades().then((response) => {\n            let especialidades = response.map((especialidade) => {\n                return {value: especialidade.especialidade_id, label: especialidade.nome}\n            });\n            this.setState({\n                especialidades: especialidades\n            });\n        }).catch(function (error) {\n            App.ToastsStore.warning(\"Não foi possível listar as especialidades. :(\");\n        });\n    }\n\n\n    changeEspecialidades(arg) {\n        this.setState({\n            profissionais: [],\n            especialidadeSelecionada: arg,\n        });\n    }\n\n    listarProfissionais() {\n\n        if (!this.state.especialidadeSelecionada) {\n            App.ToastsStore.warning(\"Favor selecionar a especialidade\");\n            return;\n        }\n\n        this.setState({\n            profissionais: [],\n            loading: true,\n        });\n\n        Profissionais.getProfissionais(this.state.especialidadeSelecionada.value).then((profissionais) => {\n            this.setState({\n                profissionais: profissionais,\n                loading: false,\n            });\n        }).catch(function (error) {\n            App.ToastsStore.warning(\"Não foi possível listar os profissionais. :(\");\n        });\n    }\n\n    render() {\n        return (\n            <div>\n\n\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Consulta\n                                        de </label>\n                                </div>\n                                <div className=\"custom-select\">\n                                    <Select options={this.state.especialidades} onChange={this.changeEspecialidades}\n                                            placeholder=\"Selecione as Especialidades\"/>\n                                </div>\n                                <div className=\"input-group-append\">\n                                    <button className=\"btn btn-success\" onClick={() => this.listarProfissionais()}\n                                            type=\"button\">Agendar\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div hidden={!this.state.loading} className=\"text-center\" >\n                        <div className=\"spinner-border text-primary\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                    <div className=\"row\" hidden={this.state.loading}>\n                        {this.state.profissionais.map((profissional, key) =>\n                            <div className=\"col-md-4\" key={key}>\n                                <CardProfissional agendar={true} profissional={profissional}\n                                                  especialidadeSelecionada={this.state.especialidadeSelecionada}/>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import BaseApi from \"./BaseApi\";\n\nclass Origens extends BaseApi {\n    static getOrigens() {\n        return this.get('/api/feegowgeneric/patient/list-sources');\n    }\n}\n\nexport default Origens;","import BaseApi from \"./BaseApi\";\n\nclass Agendamento extends BaseApi{\n\n    static agendar(data) {\n        return this.postObject('/api/agendamento',data);\n    }\n}\n\nexport default Agendamento;","import React, {Component} from 'react';\nimport Especialidades from \"../Services/Api/Especialidades\";\nimport Profissionais from \"../Services/Api/Profissionais\";\nimport CardProfissional from \"../Componentes/CardProfissional\";\nimport Origens from \"../Services/Api/Origens\";\nimport Select from \"react-select\";\nimport CPF from 'cpf-check';\nimport App from \"../App\";\nimport Agendamento from \"../Services/Api/Agendamento\";\n\nclass Cadastro extends Component {\n\n    forms = {\n        nome: React.createRef(),\n        cpf: React.createRef(),\n        comoconheceu: React.createRef(),\n        datanascimento: React.createRef(),\n    }\n\n    constructor(props) {\n        super(props);\n        this.changeOrigens = this.changeOrigens.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            especialidadeSelecionada: null,\n            profissional: null\n        }\n    }\n\n\n    async componentDidMount() {\n        let parametros = this.props.match.params;\n\n        Especialidades.getEspecialidade(Number(parametros.especialidade))\n            .then((especialidade) => {\n                this.setState({\n                    especialidadeSelecionada: {\n                        label: especialidade.nome,\n                        value: especialidade.especialidade_id,\n                    },\n                });\n            }).catch(function (error) {\n            App.ToastsStore.warning(\"Não foi possível selecionar a especialidade. :(\");\n        });\n\n        Profissionais.getProfissional(Number(parametros.especialidade), Number(parametros.profissional))\n            .then(async (professional) => {\n                this.setState({profissional: professional});\n            }).catch(function (error) {\n            App.ToastsStore.warning(\"Não foi possível selecionar o profissional. :(\");\n        });\n\n        ;\n\n        Origens.getOrigens().then(async (origens) => {\n            this.setState({\n                origens: origens.map((origem) => {\n                    return {\n                        label: origem.nome_origem,\n                        value: origem.origem_id\n                    };\n                })\n            });\n        });\n    }\n\n    changeOrigens(origemSelecionada) {\n        this.setState({\n            origemSelecionada: origemSelecionada\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let formData = {\n            specialty_id: Number(this.props.match.params.especialidade),\n            professional_id: Number(this.props.match.params.profissional),\n            name: this.forms.nome.current.value,\n            cpf: this.forms.cpf.current.value,\n            source_id: this.state.origemSelecionada && this.state.origemSelecionada.value\n        };\n\n        if (!formData.source_id) {\n            App.ToastsStore.warning(\"Favor selecionar a origem\");\n            return;\n        }\n\n        if (!CPF.validate(this.forms.cpf.current.value).valid) {\n            App.ToastsStore.warning(\"Informa um cpf válido\");\n            return;\n        }\n\n        Agendamento.agendar(formData).then(() => {\n            App.ToastsStore.success(\"Agendamento realizado com sucesso.\");\n        });\n\n        return false;\n    }\n\n    render(arg) {\n        return (\n            <div>\n                <h5>Preencha seu dados</h5>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <label>Profissional Selecionado</label>\n                        {this.state.profissional && this.state.especialidadeSelecionada &&\n                        <CardProfissional profissional={this.state.profissional}\n                                          especialidadeSelecionada={this.state.especialidadeSelecionada}/>}\n                    </div>\n                    <div className=\"col-md-8\">\n\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"row\">\n                                <div className=\"col-md-8\">\n                                    <div className=\"form-group\">\n                                        <label>Nome Completo</label>\n                                        <input ref={this.forms.nome} required className=\"form-control\"\n                                               placeholder=\"Nome Completo\"/>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"form-group\">\n                                        <label>Data de Nascimento</label>\n                                        <input type=\"date\" ref={this.forms.datanascimento} required\n                                               className=\"form-control\" placeholder=\"Data de Nascimento\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-8\">\n                                    <div className=\"form-group\">\n                                        <label>Como Conheceu?</label>\n                                        <Select ref={this.forms.comoconheceu} options={this.state.origens}\n                                                onChange={this.changeOrigens}\n                                                placeholder=\"Como Conheceu?\"/>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"form-group\">\n                                        <label>CPF</label>\n                                        <input required ref={this.forms.cpf} className=\"form-control\"\n                                               placeholder=\"CPF\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-12 text-right\">\n                                    <button type=\"submit\" className=\"btn btn-success btn-sm\">Agendar</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cadastro;","import React, {Component} from 'react';\nimport './App.css';\n\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Home from \"./Routes/Home\";\nimport Cadastro from \"./Routes/Cadastro\";\nimport {ToastsContainer, ToastsContainerPosition, ToastsStore} from \"react-toasts\";\n\nclass App extends Component {\n\n    static ToastsStore = ToastsStore;\n\n    render() {\n        return (\n            <div>\n                <ToastsContainer position={ToastsContainerPosition.BOTTOM_CENTER} store={App.ToastsStore}/>\n\n                <Router>\n                    <div className=\"container\">\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route exact path=\"/cadastro/:especialidade/:profissional\" component={Cadastro}/>\n                    </div>\n                </Router>\n            </div>\n\n\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}